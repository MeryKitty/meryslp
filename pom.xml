<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.merykitty</groupId>
  <artifactId>slp-processor</artifactId>
  <version>0.0.1</version>

  <name>slp-processor</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <junit.version>4.13.2</junit.version>
    <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
    <maven.clean.followSymLinks>false</maven.clean.followSymLinks>
    <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-surefile-plugin.version>3.0.0-M5</maven-surefile-plugin.version>
    <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
    <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
    <project.resources.input>${project.basedir}/src/main/resources</project.resources.input>
    <project.resources.output>${project.basedir}/resources</project.resources.output>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20210307</version>
    </dependency>

    <dependency>
      <groupId>net.sourceforge.argparse4j</groupId>
      <artifactId>argparse4j</artifactId>
      <version>0.8.1</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>resources</directory>
            </fileset>

            <fileset>
              <directory>target</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <executions>
          <execution>
            <id>default-resources</id>
            <phase>process-resources</phase>
            <configuration>
              <outputDirectory>${project.resources.output}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.resources.input}</directory>
                  <excludes>
                    <exclude>**/*.cpp</exclude>
                    <exclude>**/.vscode/**</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <id>resources-decoder</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>install</phase>
            <configuration>
              <outputDirectory>${project.basedir}/target/SLPDecoder/resources</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.resources.output}</directory>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <id>resources-encoder</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>install</phase>
            <configuration>
              <outputDirectory>${project.basedir}/target/SLPEncoder/resources</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.resources.output}</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>

          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefile-plugin.version}</version>
        <configuration>
          <argLine>-Dforeign.restricted=permit</argLine>
          <trimStackTrace>false</trimStackTrace>
          <useFile>false</useFile>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>compile-png</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <executable>g++</executable>
              <arguments>
                <argument>-O3</argument>
                <argument>-c</argument>
                <argument>-fPIC</argument>
                <argument>-o</argument>
                <argument>${java.io.tmpdir}/pngutils.o</argument>
                <argument>${project.resources.input}/pngutils.cpp</argument>
              </arguments>
            </configuration>
          </execution>

          <execution>
            <id>link-png</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <executable>g++</executable>
              <arguments>
                <argument>-O3</argument>
                <argument>-shared</argument>
                <argument>-o</argument>
                <argument>${project.resources.output}/pngutils.so</argument>
                <argument>${java.io.tmpdir}/pngutils.o</argument>
                <argument>-Wl,-rpath=./</argument>
                <argument>-lpng</argument>
              </arguments>
            </configuration>
          </execution>

          <execution>
            <id>create-decoder</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <executable>jpackage</executable>
              <arguments>
                <argument>-t</argument>
                <argument>app-image</argument>
                <argument>--java-options</argument>
                <argument>"-Dforeign.restricted=permit -XX:+UseParallelGC -XX:+UnlockExperimentalVMOptions -XX:+TrustFinalNonStaticFields"</argument>
                <argument>-d</argument>
                <argument>./target</argument>
                <argument>-n</argument>
                <argument>SLPDecoder</argument>
                <argument>-p</argument>
                <modulepath/>
                <argument>-m</argument>
                <argument>io.github.merykitty.slpprocessor/io.github.merykitty.slpprocessor.SLPDecoder</argument>
                <argument>--verbose</argument>
              </arguments>
            </configuration>
          </execution>

          <execution>
            <id>create-encoder</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <executable>jpackage</executable>
              <arguments>
                <argument>-t</argument>
                <argument>app-image</argument>
                <argument>--java-options</argument>
                <argument>"-Dforeign.restricted=permit -XX:+UseParallelGC -XX:CompileThreshold=1000 -XX:+UnlockExperimentalVMOptions -XX:+TrustFinalNonStaticFields"</argument>
                <argument>-d</argument>
                <argument>./target</argument>
                <argument>-n</argument>
                <argument>SLPEncoder</argument>
                <argument>-p</argument>
                <modulepath/>
                <argument>-m</argument>
                <argument>io.github.merykitty.slpprocessor/io.github.merykitty.slpprocessor.SLPEncoder</argument>
                <argument>--verbose</argument>
              </arguments>
            </configuration>
          </execution>

          <execution>
            <id>default-cli</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>--add-modules</argument>
                <argument>jdk.incubator.foreign</argument>
                <argument>-Dforeign.restricted=permit</argument>
                <argument>-XX:CompileThreshold=1000</argument>
                <argument>-XX:+UseParallelGC</argument>
                <argument>-XX:+UnlockDiagnosticVMOptions</argument>
                <argument>-XX:+UnlockExperimentalVMOptions</argument>
                <argument>-XX:+TrustFinalNonStaticFields</argument>
                <argument>-XX:StartFlightRecording:duration=600s,filename=profile.jfr,delay=30s,settings=strict.jfc</argument>
                <argument>-ea</argument>
                <argument>-p</argument>
                <classpath/>
                <argument>-cp</argument>
                <classpath/>
                <argument>io.github.merykitty.slpprocessor.Test</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
